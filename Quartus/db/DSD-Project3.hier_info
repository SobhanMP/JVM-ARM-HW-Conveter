|top
state[0] <= state_machine:sm.state
state[1] <= state_machine:sm.state
waiting <= waiting.DB_MAX_OUTPUT_PORT_TYPE
param_even <= state_machine:sm.param_even
q_select <= state_machine:sm.q_select
parameter_number[0] <= parameter_number[0].DB_MAX_OUTPUT_PORT_TYPE
parameter_number[1] <= parameter_number[1].DB_MAX_OUTPUT_PORT_TYPE
parameter_number[2] <= parameter_number[2].DB_MAX_OUTPUT_PORT_TYPE
parameter_number[3] <= parameter_number[3].DB_MAX_OUTPUT_PORT_TYPE
parameter_number[4] <= parameter_number[4].DB_MAX_OUTPUT_PORT_TYPE
push_wide <= state_machine:sm.push_wide
is_wide <= state_machine:sm.is_wide
arm_inst[0] <= arm_inst[0].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[1] <= arm_inst[1].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[2] <= arm_inst[2].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[3] <= arm_inst[3].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[4] <= arm_inst[4].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[5] <= arm_inst[5].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[6] <= arm_inst[6].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[7] <= arm_inst[7].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[8] <= arm_inst[8].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[9] <= arm_inst[9].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[10] <= arm_inst[10].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[11] <= arm_inst[11].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[12] <= arm_inst[12].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[13] <= arm_inst[13].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[14] <= arm_inst[14].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[15] <= arm_inst[15].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[16] <= arm_inst[16].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[17] <= arm_inst[17].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[18] <= arm_inst[18].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[19] <= arm_inst[19].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[20] <= arm_inst[20].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[21] <= arm_inst[21].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[22] <= arm_inst[22].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[23] <= arm_inst[23].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[24] <= arm_inst[24].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[25] <= arm_inst[25].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[26] <= arm_inst[26].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[27] <= arm_inst[27].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[28] <= arm_inst[28].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[29] <= arm_inst[29].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[30] <= arm_inst[30].DB_MAX_OUTPUT_PORT_TYPE
arm_inst[31] <= arm_inst[31].DB_MAX_OUTPUT_PORT_TYPE
push_inst[0] <= push_inst.DB_MAX_OUTPUT_PORT_TYPE
push_inst[1] <= push_inst.DB_MAX_OUTPUT_PORT_TYPE
push_inst[2] <= push_inst.DB_MAX_OUTPUT_PORT_TYPE
push_inst[3] <= push_inst.DB_MAX_OUTPUT_PORT_TYPE
push_inst[4] <= push_inst.DB_MAX_OUTPUT_PORT_TYPE
push_inst[5] <= push_inst.DB_MAX_OUTPUT_PORT_TYPE
push_inst[6] <= push_inst.DB_MAX_OUTPUT_PORT_TYPE
push_inst[7] <= push_inst.DB_MAX_OUTPUT_PORT_TYPE
push_inst[8] <= <GND>
push_inst[9] <= <GND>
push_inst[10] <= <GND>
push_inst[11] <= <GND>
push_inst[12] <= <GND>
push_inst[13] <= <GND>
push_inst[14] <= <GND>
push_inst[15] <= <GND>
push_inst[16] <= state_machine:sm.param_even
push_inst[17] <= <GND>
push_inst[18] <= state_machine:sm.param_even
push_inst[19] <= state_machine:sm.param_even
push_inst[20] <= <GND>
push_inst[21] <= state_machine:sm.param_even
push_inst[22] <= state_machine:sm.param_even
push_inst[23] <= <GND>
push_inst[24] <= <VCC>
push_inst[25] <= state_machine:sm.param_even
push_inst[26] <= state_machine:sm.param_even
push_inst[27] <= <GND>
push_inst[28] <= <GND>
push_inst[29] <= <VCC>
push_inst[30] <= <VCC>
push_inst[31] <= <VCC>
instr[0] <= adr_to_arm:decoder.arm_inst
instr[1] <= adr_to_arm:decoder.arm_inst
instr[2] <= adr_to_arm:decoder.arm_inst
instr[3] <= adr_to_arm:decoder.arm_inst
instr[4] <= adr_to_arm:decoder.arm_inst
instr[5] <= adr_to_arm:decoder.arm_inst
instr[6] <= adr_to_arm:decoder.arm_inst
instr[7] <= adr_to_arm:decoder.arm_inst
instr[8] <= adr_to_arm:decoder.arm_inst
instr[9] <= adr_to_arm:decoder.arm_inst
instr[10] <= adr_to_arm:decoder.arm_inst
instr[11] <= adr_to_arm:decoder.arm_inst
instr[12] <= adr_to_arm:decoder.arm_inst
instr[13] <= adr_to_arm:decoder.arm_inst
instr[14] <= adr_to_arm:decoder.arm_inst
instr[15] <= adr_to_arm:decoder.arm_inst
instr[16] <= adr_to_arm:decoder.arm_inst
instr[17] <= adr_to_arm:decoder.arm_inst
instr[18] <= adr_to_arm:decoder.arm_inst
instr[19] <= adr_to_arm:decoder.arm_inst
instr[20] <= adr_to_arm:decoder.arm_inst
instr[21] <= adr_to_arm:decoder.arm_inst
instr[22] <= adr_to_arm:decoder.arm_inst
instr[23] <= adr_to_arm:decoder.arm_inst
instr[24] <= adr_to_arm:decoder.arm_inst
instr[25] <= adr_to_arm:decoder.arm_inst
instr[26] <= adr_to_arm:decoder.arm_inst
instr[27] <= adr_to_arm:decoder.arm_inst
instr[28] <= adr_to_arm:decoder.arm_inst
instr[29] <= adr_to_arm:decoder.arm_inst
instr[30] <= adr_to_arm:decoder.arm_inst
instr[31] <= adr_to_arm:decoder.arm_inst
valid_write <= valid_write.DB_MAX_OUTPUT_PORT_TYPE
link_list_ptr[0] <= link_list_ptr[0].DB_MAX_OUTPUT_PORT_TYPE
link_list_ptr[1] <= link_list_ptr[1].DB_MAX_OUTPUT_PORT_TYPE
link_list_ptr[2] <= link_list_ptr[2].DB_MAX_OUTPUT_PORT_TYPE
link_list_ptr[3] <= link_list_ptr[3].DB_MAX_OUTPUT_PORT_TYPE
link_list_ptr[4] <= link_list_ptr[4].DB_MAX_OUTPUT_PORT_TYPE
link_list_ptr[5] <= link_list_ptr[5].DB_MAX_OUTPUT_PORT_TYPE
link_list_ptr[6] <= link_list_ptr[6].DB_MAX_OUTPUT_PORT_TYPE
link_list_ptr[7] <= link_list_ptr[7].DB_MAX_OUTPUT_PORT_TYPE
link_list_ptr[8] <= link_list_ptr[8].DB_MAX_OUTPUT_PORT_TYPE
oram_iter[0] <= <GND>
oram_iter[1] <= <GND>
oram_iter[2] <= <GND>
oram_iter[3] <= <GND>
oram_iter[4] <= <GND>
oram_iter[5] <= <GND>
oram_iter[6] <= <GND>
oram_iter[7] <= <GND>
jvm_opcode[0] <= jvm_opcode[0].DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[1] <= jvm_opcode[1].DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[2] <= jvm_opcode[2].DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[3] <= jvm_opcode[3].DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[4] <= jvm_opcode[4].DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[5] <= jvm_opcode[5].DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[6] <= jvm_opcode[6].DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[7] <= jvm_opcode[7].DB_MAX_OUTPUT_PORT_TYPE
byte_to_push[0] <= byte_to_push.DB_MAX_OUTPUT_PORT_TYPE
byte_to_push[1] <= byte_to_push.DB_MAX_OUTPUT_PORT_TYPE
byte_to_push[2] <= byte_to_push.DB_MAX_OUTPUT_PORT_TYPE
byte_to_push[3] <= byte_to_push.DB_MAX_OUTPUT_PORT_TYPE
byte_to_push[4] <= byte_to_push.DB_MAX_OUTPUT_PORT_TYPE
byte_to_push[5] <= byte_to_push.DB_MAX_OUTPUT_PORT_TYPE
byte_to_push[6] <= byte_to_push.DB_MAX_OUTPUT_PORT_TYPE
byte_to_push[7] <= byte_to_push.DB_MAX_OUTPUT_PORT_TYPE
oram_ready <= write:w.ready
iram[0] => iram[0].IN1
iram[1] => iram[1].IN1
iram[2] => iram[2].IN1
iram[3] => iram[3].IN1
iram[4] => iram[4].IN1
iram[5] => iram[5].IN1
iram[6] => iram[6].IN1
iram[7] => iram[7].IN1
iram_ready => waiting.IN1
clk => clk.IN2
reset => reset.IN2


|top|adr_to_arm:decoder
arm_inst[0] <= com_rom:c.data_out
arm_inst[1] <= com_rom:c.data_out
arm_inst[2] <= com_rom:c.data_out
arm_inst[3] <= com_rom:c.data_out
arm_inst[4] <= com_rom:c.data_out
arm_inst[5] <= com_rom:c.data_out
arm_inst[6] <= com_rom:c.data_out
arm_inst[7] <= com_rom:c.data_out
arm_inst[8] <= com_rom:c.data_out
arm_inst[9] <= com_rom:c.data_out
arm_inst[10] <= com_rom:c.data_out
arm_inst[11] <= com_rom:c.data_out
arm_inst[12] <= com_rom:c.data_out
arm_inst[13] <= com_rom:c.data_out
arm_inst[14] <= com_rom:c.data_out
arm_inst[15] <= com_rom:c.data_out
arm_inst[16] <= com_rom:c.data_out
arm_inst[17] <= com_rom:c.data_out
arm_inst[18] <= com_rom:c.data_out
arm_inst[19] <= com_rom:c.data_out
arm_inst[20] <= com_rom:c.data_out
arm_inst[21] <= com_rom:c.data_out
arm_inst[22] <= com_rom:c.data_out
arm_inst[23] <= com_rom:c.data_out
arm_inst[24] <= com_rom:c.data_out
arm_inst[25] <= com_rom:c.data_out
arm_inst[26] <= com_rom:c.data_out
arm_inst[27] <= com_rom:c.data_out
arm_inst[28] <= com_rom:c.data_out
arm_inst[29] <= com_rom:c.data_out
arm_inst[30] <= com_rom:c.data_out
arm_inst[31] <= com_rom:c.data_out
i[0] => i[0].IN1
i[1] => i[1].IN1
i[2] => i[2].IN1
i[3] => i[3].IN1
i[4] => i[4].IN1
i[5] => i[5].IN1
i[6] => i[6].IN1
i[7] => i[7].IN1
i[8] => i[8].IN1


|top|adr_to_arm:decoder|inst_adr_rom:a
data_in[0] => Decoder0.IN8
data_in[1] => Decoder0.IN7
data_in[2] => Decoder0.IN6
data_in[3] => Decoder0.IN5
data_in[4] => Decoder0.IN4
data_in[5] => Decoder0.IN3
data_in[6] => Decoder0.IN2
data_in[7] => Decoder0.IN1
data_in[8] => Decoder0.IN0
data_out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|adr_to_arm:decoder|com_rom:c
data_in[0] => Decoder0.IN6
data_in[1] => Decoder0.IN5
data_in[2] => Decoder0.IN4
data_in[3] => Decoder0.IN3
data_in[4] => Decoder0.IN2
data_in[5] => Decoder0.IN1
data_in[6] => Decoder0.IN0
data_out[0] <= WideOr31.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= WideOr30.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= WideOr29.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= WideOr28.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= WideOr27.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= WideOr26.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= WideOr25.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= WideOr24.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= WideOr23.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= WideOr22.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= WideOr21.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= WideOr20.DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= WideOr19.DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= WideOr18.DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= WideOr17.DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= WideOr16.DB_MAX_OUTPUT_PORT_TYPE
data_out[16] <= WideOr15.DB_MAX_OUTPUT_PORT_TYPE
data_out[17] <= WideOr14.DB_MAX_OUTPUT_PORT_TYPE
data_out[18] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
data_out[19] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
data_out[20] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
data_out[21] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
data_out[22] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
data_out[23] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
data_out[24] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
data_out[25] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
data_out[26] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
data_out[27] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
data_out[28] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
data_out[29] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
data_out[30] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
data_out[31] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|state_machine:sm
state[0] <= state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
com_adr[0] <= com_adr[0].DB_MAX_OUTPUT_PORT_TYPE
com_adr[1] <= com_adr[1].DB_MAX_OUTPUT_PORT_TYPE
com_adr[2] <= com_adr[2].DB_MAX_OUTPUT_PORT_TYPE
com_adr[3] <= com_adr[3].DB_MAX_OUTPUT_PORT_TYPE
com_adr[4] <= com_adr[4].DB_MAX_OUTPUT_PORT_TYPE
com_adr[5] <= com_adr[5].DB_MAX_OUTPUT_PORT_TYPE
com_adr[6] <= com_adr[6].DB_MAX_OUTPUT_PORT_TYPE
com_adr[7] <= com_adr[7].DB_MAX_OUTPUT_PORT_TYPE
com_adr[8] <= com_adr[8].DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[0] <= jvm_opcode[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[1] <= jvm_opcode[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[2] <= jvm_opcode[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[3] <= jvm_opcode[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[4] <= jvm_opcode[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[5] <= jvm_opcode[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[6] <= jvm_opcode[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
jvm_opcode[7] <= jvm_opcode[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q_select <= q_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
param_even <= param_even~reg0.DB_MAX_OUTPUT_PORT_TYPE
push_wide <= push_wide~reg0.DB_MAX_OUTPUT_PORT_TYPE
is_wide <= is_wide~reg0.DB_MAX_OUTPUT_PORT_TYPE
waiting => com_adr.OUTPUTSELECT
waiting => com_adr.OUTPUTSELECT
waiting => com_adr.OUTPUTSELECT
waiting => com_adr.OUTPUTSELECT
waiting => com_adr.OUTPUTSELECT
waiting => com_adr.OUTPUTSELECT
waiting => com_adr.OUTPUTSELECT
waiting => com_adr.OUTPUTSELECT
waiting => com_adr.OUTPUTSELECT
waiting => push_wide~reg0.ENA
waiting => jvm_opcode[7]~reg0.ENA
waiting => jvm_opcode[6]~reg0.ENA
waiting => jvm_opcode[5]~reg0.ENA
waiting => jvm_opcode[4]~reg0.ENA
waiting => jvm_opcode[3]~reg0.ENA
waiting => jvm_opcode[2]~reg0.ENA
waiting => jvm_opcode[1]~reg0.ENA
waiting => jvm_opcode[0]~reg0.ENA
waiting => state[1]~reg0.ENA
waiting => state[0]~reg0.ENA
waiting => q_select~reg0.ENA
waiting => param_counter[7].ENA
waiting => param_counter[6].ENA
waiting => param_counter[5].ENA
waiting => param_counter[4].ENA
waiting => param_counter[3].ENA
waiting => param_counter[2].ENA
waiting => param_counter[1].ENA
waiting => param_counter[0].ENA
waiting => param_even~reg0.ENA
waiting => is_wide~reg0.ENA
iram_data[0] => WideOr0.IN0
iram_data[0] => Mux11.IN5
iram_data[0] => jvm_opcode.DATAB
iram_data[0] => Equal0.IN7
iram_data[1] => WideOr0.IN1
iram_data[1] => Mux10.IN5
iram_data[1] => jvm_opcode.DATAB
iram_data[1] => Equal0.IN6
iram_data[2] => WideOr0.IN2
iram_data[2] => Mux9.IN5
iram_data[2] => jvm_opcode.DATAB
iram_data[2] => Equal0.IN2
iram_data[3] => WideOr0.IN3
iram_data[3] => Mux8.IN5
iram_data[3] => jvm_opcode.DATAB
iram_data[3] => Equal0.IN5
iram_data[4] => WideOr0.IN4
iram_data[4] => Mux7.IN5
iram_data[4] => jvm_opcode.DATAB
iram_data[4] => Equal0.IN4
iram_data[5] => WideOr0.IN5
iram_data[5] => Mux6.IN5
iram_data[5] => jvm_opcode.DATAB
iram_data[5] => Equal0.IN3
iram_data[6] => WideOr0.IN6
iram_data[6] => Mux5.IN5
iram_data[6] => jvm_opcode.DATAB
iram_data[6] => Equal0.IN1
iram_data[7] => WideOr0.IN7
iram_data[7] => Mux4.IN5
iram_data[7] => jvm_opcode.DATAB
iram_data[7] => Equal0.IN0
parameter_number[0] => WideOr1.IN0
parameter_number[0] => ShiftLeft0.IN9
parameter_number[0] => ShiftLeft1.IN33
parameter_number[1] => WideOr1.IN1
parameter_number[1] => ShiftLeft0.IN8
parameter_number[1] => ShiftLeft1.IN32
parameter_number[2] => WideOr1.IN2
parameter_number[2] => ShiftLeft0.IN7
parameter_number[2] => ShiftLeft1.IN31
parameter_number[3] => WideOr1.IN3
parameter_number[3] => ShiftLeft0.IN6
parameter_number[3] => ShiftLeft1.IN30
parameter_number[4] => WideOr1.IN4
parameter_number[4] => ShiftLeft0.IN5
parameter_number[4] => ShiftLeft1.IN29
clk => push_wide~reg0.CLK
clk => is_wide~reg0.CLK
clk => param_even~reg0.CLK
clk => param_counter[0].CLK
clk => param_counter[1].CLK
clk => param_counter[2].CLK
clk => param_counter[3].CLK
clk => param_counter[4].CLK
clk => param_counter[5].CLK
clk => param_counter[6].CLK
clk => param_counter[7].CLK
clk => q_select~reg0.CLK
clk => state[0]~reg0.CLK
clk => state[1]~reg0.CLK
clk => com_adr[0]~reg0.CLK
clk => com_adr[1]~reg0.CLK
clk => com_adr[2]~reg0.CLK
clk => com_adr[3]~reg0.CLK
clk => com_adr[4]~reg0.CLK
clk => com_adr[5]~reg0.CLK
clk => com_adr[6]~reg0.CLK
clk => com_adr[7]~reg0.CLK
clk => com_adr[8]~reg0.CLK
clk => jvm_opcode[0]~reg0.CLK
clk => jvm_opcode[1]~reg0.CLK
clk => jvm_opcode[2]~reg0.CLK
clk => jvm_opcode[3]~reg0.CLK
clk => jvm_opcode[4]~reg0.CLK
clk => jvm_opcode[5]~reg0.CLK
clk => jvm_opcode[6]~reg0.CLK
clk => jvm_opcode[7]~reg0.CLK
reset => push_wide~reg0.ACLR
reset => is_wide~reg0.ACLR
reset => param_even~reg0.ACLR
reset => param_counter[0].ACLR
reset => param_counter[1].ACLR
reset => param_counter[2].ACLR
reset => param_counter[3].ACLR
reset => param_counter[4].ACLR
reset => param_counter[5].ACLR
reset => param_counter[6].ACLR
reset => param_counter[7].ACLR
reset => q_select~reg0.ACLR
reset => state[0]~reg0.ACLR
reset => state[1]~reg0.ACLR
reset => com_adr[0]~reg0.ACLR
reset => com_adr[1]~reg0.ACLR
reset => com_adr[2]~reg0.ACLR
reset => com_adr[3]~reg0.ACLR
reset => com_adr[4]~reg0.ACLR
reset => com_adr[5]~reg0.ACLR
reset => com_adr[6]~reg0.ACLR
reset => com_adr[7]~reg0.ACLR
reset => com_adr[8]~reg0.ACLR
reset => jvm_opcode[0]~reg0.ACLR
reset => jvm_opcode[1]~reg0.ACLR
reset => jvm_opcode[2]~reg0.ACLR
reset => jvm_opcode[3]~reg0.ACLR
reset => jvm_opcode[4]~reg0.ACLR
reset => jvm_opcode[5]~reg0.ACLR
reset => jvm_opcode[6]~reg0.ACLR
reset => jvm_opcode[7]~reg0.ACLR


|top|state_machine:sm|next_adr_rom:nar
data_in[0] => Decoder0.IN8
data_in[1] => Decoder0.IN7
data_in[2] => Decoder0.IN6
data_in[3] => Decoder0.IN5
data_in[4] => Decoder0.IN4
data_in[5] => Decoder0.IN3
data_in[6] => Decoder0.IN2
data_in[7] => Decoder0.IN1
data_in[8] => Decoder0.IN0
data_out[0] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|count_rom:c
count[0] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
opcode[0] => Decoder0.IN7
opcode[1] => Decoder0.IN6
opcode[2] => Decoder0.IN5
opcode[3] => Decoder0.IN4
opcode[4] => Decoder0.IN3
opcode[5] => Decoder0.IN2
opcode[6] => Decoder0.IN1
opcode[7] => Decoder0.IN0


|top|write:w
ready <= memory_w:mem.ready
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
reset => reset.IN1
start => start.IN1
clk => clk.IN1


|top|write:w|memory_w:mem
ready <= state.DB_MAX_OUTPUT_PORT_TYPE
clk => counter[0].CLK
clk => counter[1].CLK
clk => state.CLK
reset => state.ACLR
reset => counter[1].ENA
reset => counter[0].ENA
address[0] => counter.DATAB
address[1] => counter.DATAB
address[2] => ~NO_FANOUT~
address[3] => ~NO_FANOUT~
address[4] => ~NO_FANOUT~
address[5] => ~NO_FANOUT~
address[6] => ~NO_FANOUT~
address[7] => ~NO_FANOUT~
data_in[0] => ~NO_FANOUT~
data_in[1] => ~NO_FANOUT~
data_in[2] => ~NO_FANOUT~
data_in[3] => ~NO_FANOUT~
data_in[4] => ~NO_FANOUT~
data_in[5] => ~NO_FANOUT~
data_in[6] => ~NO_FANOUT~
data_in[7] => ~NO_FANOUT~
data_in[8] => ~NO_FANOUT~
data_in[9] => ~NO_FANOUT~
data_in[10] => ~NO_FANOUT~
data_in[11] => ~NO_FANOUT~
data_in[12] => ~NO_FANOUT~
data_in[13] => ~NO_FANOUT~
data_in[14] => ~NO_FANOUT~
data_in[15] => ~NO_FANOUT~
data_in[16] => ~NO_FANOUT~
data_in[17] => ~NO_FANOUT~
data_in[18] => ~NO_FANOUT~
data_in[19] => ~NO_FANOUT~
data_in[20] => ~NO_FANOUT~
data_in[21] => ~NO_FANOUT~
data_in[22] => ~NO_FANOUT~
data_in[23] => ~NO_FANOUT~
data_in[24] => ~NO_FANOUT~
data_in[25] => ~NO_FANOUT~
data_in[26] => ~NO_FANOUT~
data_in[27] => ~NO_FANOUT~
data_in[28] => ~NO_FANOUT~
data_in[29] => ~NO_FANOUT~
data_in[30] => ~NO_FANOUT~
data_in[31] => ~NO_FANOUT~
start => always0.IN1


